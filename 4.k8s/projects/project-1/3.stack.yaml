---
apiVersion: v1
kind: Namespace
metadata:
  name: demo

# ===== API (echo) =====
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: demo
spec:
  replicas: 1
  selector: { matchLabels: { app: api } }
  template:
    metadata: { labels: { app: api } }
    spec:
      containers:
        - name: http-echo
          image: hashicorp/http-echo
          args: ["-text=hello-from-api", "-listen=:5678"]
          ports: [{ containerPort: 5678 }]
          resources:
            requests:
              cpu: "100m"
              memory: "64Mi"
            limits:
              cpu: "200m"
              memory: "128Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: demo
spec:
  selector: { app: api }
  ports:
    - port: 80
      targetPort: 5678

# ===== Frontend (static html) =====
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-html
  namespace: demo
data:
  index.html: |
    <html>
      <body style="font-family:sans-serif">
        <h1>Hello from Frontend (Kind)</h1>
        <p>Try the API at <code>/api/</code></p>
      </body>
    </html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: demo
spec:
  replicas: 1
  selector: { matchLabels: { app: frontend } }
  template:
    metadata: { labels: { app: frontend } }
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          ports: [{ containerPort: 80 }]
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
          volumeMounts:
            - name: web
              mountPath: /usr/share/nginx/html
      volumes:
        - name: web
          configMap: { name: frontend-html }
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: demo
spec:
  selector: { app: frontend }
  ports:
    - port: 80
      targetPort: 80

# ===== Ingress (paths) =====
# host: local.test
#   /api/ -> api
#   /     -> frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web
  namespace: demo
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: local.com
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: api
                port:
                  number: 80
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 80
